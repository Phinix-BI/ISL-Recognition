// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei/native'

// export default function Character(props) {
//   const { nodes, materials } = useGLTF(require('../assets/Models/BOY_CHARACTER.glb'))
//   return (
//     // <group {...props} dispose={null} scale={11} position={[1.9,-11,-5]}>
//     <group {...props} dispose={null} scale={8} position={[0,-5.3,0]}>
//       <mesh castShadow receiveShadow geometry={nodes.body_1.geometry} material={materials.shirt} />
//       <mesh castShadow receiveShadow geometry={nodes.body_2.geometry} material={materials.shorts} />
//       <mesh castShadow receiveShadow geometry={nodes.body_3.geometry} material={materials.shoe} />
//       <mesh castShadow receiveShadow geometry={nodes.body_4.geometry} material={materials.hair} />
//       <mesh castShadow receiveShadow geometry={nodes.body_5.geometry} material={materials.eye} />
//       <mesh castShadow receiveShadow geometry={nodes.body_6.geometry} material={materials.body} />
//       <mesh castShadow receiveShadow geometry={nodes.body_7.geometry} material={materials.head} />
//     </group>
//   )
// }

// useGLTF.preload(require('../assets/Models/BOY_CHARACTER.glb'))

import React, { useRef,useEffect } from 'react';
import { useGLTF, useAnimations, useLoader } from '@react-three/drei/native';
import { useFrame } from '@react-three/fiber/native';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import * as THREE from 'three'

export default function Character(props) {
  const group = useRef();
  // useGLTF.preload(require('../assets/Models/Good_morning_animation_14.glb')); 
  const { nodes, materials, animations } = useGLTF(require('../assets/Models/Good_morning_animation_14.glb'));
  // const { nodes, materials, animations } = useGLTF(require('../assets/Models/New_model.glb'));
  const { actions } = useAnimations(animations, group);
  // const actionRef = useRef(null);
  // useEffect(() => {
  //   const animateAction = actions['2ndAction'];
  //   if (animateAction) {
  //     animateAction.timeScale = 0.5; // Set consistent speed
  //     actionRef.current = animateAction;
  //   }
  // }, [actions]);
  // const handleClick = () => {
  //   if (actionRef.current) {
  //     actionRef.current.reset().play();
  //   }
  // };
  const handleClick = () => {
    const animateAction = actions['2ndAction'];
    if (animateAction) {
      // animateAction.reset().setLoop(THREE.LoopOnce, 1).play();
      // animateAction.clampWhenFinished = true;
      animateAction.reset().play();
      animateAction.timeScale = 0.4;  
      // actionRef.current = animateAction;
    }
  };

  useFrame((_, delta) => {
    if (actions['2ndAction']) actions['2ndAction'].getMixer().update(delta);
    // if (actionRef.current && actionRef.current.isRunning()) {
    //   const adjustedDelta = delta > 0.1 ? 0.016 : delta; // Cap delta to smooth initial speed-up
    //   actionRef.current.getMixer().update(adjustedDelta * actionRef.current.timeScale);
    // }
  });
  return (
    <group ref={group} {...props} dispose={null} onClick={handleClick} castShadow receiveShadow>
      <group name="Scene" >
        <group name="Right_Boy" scale={4} position={[0, -4.5, 0]} rotation={[0, -0.025, 0]}>
          <group name="chest002">
            <skinnedMesh
              name="body002_1"
              geometry={nodes.body002_1.geometry}
              material={materials['shirt.001']}
              skeleton={nodes.body002_1.skeleton}
              castShadow receiveShadow
            />
            <skinnedMesh
              name="body002_2"
              geometry={nodes.body002_2.geometry}
              material={materials['shorts.001']}
              skeleton={nodes.body002_2.skeleton}
              castShadow receiveShadow
            />
            <skinnedMesh
              name="body002_3"
              geometry={nodes.body002_3.geometry}
              material={materials['shoe.001']}
              skeleton={nodes.body002_3.skeleton}
              castShadow receiveShadow

            />
            <skinnedMesh
              name="body002_4"
              geometry={nodes.body002_4.geometry}
              material={materials['hair.001']}
              skeleton={nodes.body002_4.skeleton}
              castShadow receiveShadow
            />
            <skinnedMesh
              name="body002_5"
              geometry={nodes.body002_5.geometry}
              material={materials['eye.001']}
              skeleton={nodes.body002_5.skeleton}
              castShadow receiveShadow
            />
            <skinnedMesh
              name="body002_6"
              geometry={nodes.body002_6.geometry}
              material={materials['body.001']}
              skeleton={nodes.body002_6.skeleton}
              castShadow receiveShadow
            />
            <skinnedMesh
              name="body002_7"
              geometry={nodes.body002_7.geometry}
              material={materials['head.001']}
              skeleton={nodes.body002_7.skeleton}
              castShadow receiveShadow
            />
          </group>
          <primitive object={nodes.mid_down} />
          <primitive object={nodes.Bone005} />
          <primitive object={nodes.Bone010} />
          <primitive object={nodes.Bone011} />
          <primitive object={nodes.Bone012} />
          <primitive object={nodes.Bone013} />
          <primitive object={nodes.Bone016} />
          <primitive object={nodes.Bone017} />
          <primitive object={nodes.mid_down001} />
          <primitive object={nodes.Bone044} />
          <primitive object={nodes.Bone045} />
          <primitive object={nodes.Bone046} />
          <primitive object={nodes.Bone047} />
          <primitive object={nodes.Bone048} />
          <primitive object={nodes.Bone049} />
          <primitive object={nodes.Bone050} />
          <primitive object={nodes.Bone} />
          <primitive object={nodes.Bone001} />
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload(require('../assets/Models/New_model.glb'));
useGLTF.preload(require('../assets/Models/Good_morning_animation_14.glb'));
